name: Flutter Build Check

on:
  pull_request:
    branches:
      - "**" # Triggers for all branches

jobs:
  build-check:
    name: Flutter Type and Build Check
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          flutter-version: 3.x

      # Install dependencies
      - name: Install dependencies
        run: flutter pub get
      - name: Generate .env files
        run: |
          echo "API_URL=https://dev.api.example.com" > .env.dev
          echo "DEBUG=true" >> .env.dev
          echo "API_CONNECT_TIMEOUT=5000" >> .env.dev
          echo "API_RECEIVE_TIMEOUT=5000" >> .env.dev

          echo "API_URL=https://prod.api.example.com" > .env.prod
          echo "DEBUG=false" >> .env.prod
          echo "API_CONNECT_TIMEOUT=10000" >> .env.prod
          echo "API_RECEIVE_TIMEOUT=10000" >> .env.prod

      - name: Generate code
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Generate translation
        run: flutter pub run easy_localization:generate -S assets/translations -f keys -O lib/core/translations/ -o local_keys.g.dart && dart format lib/core/translations/local_keys.g.dart
      - name: Generate translation file
        run: flutter pub run easy_localization:generate --source-dir assets/translations --output-dir lib/core/translations && dart format lib/core/translations/codegen_loader.g.dart

      - name: Generate .env files
        run: |
          echo "API_URL=https://dev.api.example.com" > .env.dev
          echo "DEBUG=true" >> .env.dev
          echo "API_CONNECT_TIMEOUT=5000" >> .env.dev
          echo "API_RECEIVE_TIMEOUT=5000" >> .env.dev

          echo "API_URL=https://prod.api.example.com" > .env.prod
          echo "DEBUG=false" >> .env.prod
          echo "API_CONNECT_TIMEOUT=10000" >> .env.prod
          echo "API_RECEIVE_TIMEOUT=10000" >> .env.prod

      - name: Generate code
        run: flutter pub run build_runner build --delete-conflicting-outputs
      - name: Generate translation
        run: flutter pub run easy_localization:generate -S assets/translations -f keys -O lib/core/translations/ -o local_keys.g.dart && dart format lib/core/translations/local_keys.g.dart
      - name: Generate translation file
        run: flutter pub run easy_localization:generate --source-dir assets/translations --output-dir lib/core/translations && dart format lib/core/translations/codegen_loader.g.dart

      # Check formatting (optional)
      - name: Check formatting
        run: dart format --set-exit-if-changed .

      # Run type checks
      - name: Dart analyze
        run: flutter analyze

      - name: Increment build number
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          CURRENT_VERSION=$(grep '^version: ' pubspec.yaml | sed 's/version: //' | awk -F"+" '{print $1}')
          CURRENT_BUILD=$(grep '^version: ' pubspec.yaml | sed 's/version: //' | awk -F"+" '{print $2}')
          NEW_BUILD=$((CURRENT_BUILD + 1))
          sed -i "s/version: $CURRENT_VERSION+$CURRENT_BUILD/version: $CURRENT_VERSION+$NEW_BUILD/" pubspec.yaml
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add pubspec.yaml
          git commit -m "Increment build number to $NEW_BUILD"
          git push origin sandbox_branch
